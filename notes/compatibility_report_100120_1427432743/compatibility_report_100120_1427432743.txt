Converting GML script: ${project_dir}\scripts\Approach\Approach.gml
Converted description /// @description  Approach(start, end, shift);/// @param start
/// @param  end
/// @param  shift

Converting GML script: ${project_dir}\scripts\OnGround\OnGround.gml
Converted description /// @description  OnGround();

Converting GML script: ${project_dir}\objects\oGame\Step_0.gml
Converted string - line 4: 'R' -> "R"

Converting GML script: ${project_dir}\objects\oGame\Draw_0.gml
Converted builtin - line 15: view_xview[0] -> __view_get( e__VW.XView, 0 )
Converted builtin - line 16: view_xview[0] -> __view_get( e__VW.XView, 0 )
Converted builtin - line 15: view_yview[0] -> __view_get( e__VW.YView, 0 )
Converted builtin - line 16: view_yview[0] -> __view_get( e__VW.YView, 0 )

Converting GML script: ${project_dir}\objects\oPlayer\Create_0.gml
Converted builtin - line 13: view_xview[0] = max(0, min(x - view_wport[0] * 0.5, room_width  - view_wport[0])) -> __view_set( e__VW.XView, 0, max(0, min(x - view_wport[0] * 0.5, room_width  - view_wport[0])) )
Converted builtin - line 14: view_yview[0] = max(0, min(y - view_hport[0] * 0.5 - 16, room_height - view_hport[0])) -> __view_set( e__VW.YView, 0, max(0, min(y - view_hport[0] * 0.5 - 16, room_height - view_hport[0])) )
Converted builtin - line 13: view_wport[0] -> __view_get( e__VW.WPort, 0 )
Converted builtin - line 13: view_wport[0] -> __view_get( e__VW.WPort, 0 )
Converted builtin - line 14: view_hport[0] -> __view_get( e__VW.HPort, 0 )
Converted builtin - line 14: view_hport[0] -> __view_get( e__VW.HPort, 0 )

Converting GML script: ${project_dir}\objects\oPlayer\Step_0.gml
Converted string - line 11: 'Z' -> "Z"
Converted string - line 12: 'Z' -> "Z"

Converting GML script: ${project_dir}\objects\oCamera\Step_2.gml
Converted builtin - line 7: view_xview[0] -> __view_get( e__VW.XView, 0 )
Converted builtin - line 11: view_xview[0] -> __view_get( e__VW.XView, 0 )
Converted builtin - line 8: view_yview[0] -> __view_get( e__VW.YView, 0 )
Converted builtin - line 12: view_yview[0] -> __view_get( e__VW.YView, 0 )
Converted builtin - line 17: view_angle[0] = random_range(-1, 1) -> __view_set( e__VW.Angle, 0, random_range(-1, 1) )
Converted builtin - line 20: view_angle[0] = 0 -> __view_set( e__VW.Angle, 0, 0 )
Converted builtin - line 7: view_wport[0] -> __view_get( e__VW.WPort, 0 )
Converted builtin - line 11: view_wport[0] -> __view_get( e__VW.WPort, 0 )
Converted builtin - line 8: view_hport[0] -> __view_get( e__VW.HPort, 0 )
Converted builtin - line 12: view_hport[0] -> __view_get( e__VW.HPort, 0 )
Converted builtin - line 7: view_xview[0] = Approach(__view_get( e__VW.XView, 0 ), x - __view_get( e__VW.WPort, 0 ) * 0.5, 10) -> __view_set( e__VW.XView, 0, Approach(__view_get( e__VW.XView, 0 ), x - __view_get( e__VW.WPort, 0 ) * 0.5, 10) )
Converted builtin - line 11: view_xview[0] = max(0, min(__view_get( e__VW.XView, 0 ), room_width  - __view_get( e__VW.WPort, 0 ))) -> __view_set( e__VW.XView, 0, max(0, min(__view_get( e__VW.XView, 0 ), room_width  - __view_get( e__VW.WPort, 0 ))) )
Converted builtin - line 8: view_yview[0] = Approach(__view_get( e__VW.YView, 0 ), y - __view_get( e__VW.HPort, 0 ) * 0.5 - 16, 10) -> __view_set( e__VW.YView, 0, Approach(__view_get( e__VW.YView, 0 ), y - __view_get( e__VW.HPort, 0 ) * 0.5 - 16, 10) )
Converted builtin - line 12: view_yview[0] = max(0, min(__view_get( e__VW.YView, 0 ), room_height - __view_get( e__VW.HPort, 0 ))) -> __view_set( e__VW.YView, 0, max(0, min(__view_get( e__VW.YView, 0 ), room_height - __view_get( e__VW.HPort, 0 ))) )

Added compatibility script 'instance/instance_create.gml'
Added compatibility script 'object/object_get_depth.gml'
Added compatibility script 'view/__view_get.gml'
Added compatibility script 'view/__view_set.gml'
Added compatibility script 'view/__view_set_internal.gml'
Added compatibility script 'view/__init_view.gml'
Added compatibility script '__init_global.gml'
Added compatibility script '__global_object_depths.gml'